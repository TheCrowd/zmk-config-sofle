/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    combos {
        compatible = "zmk,combos";

        search {
            bindings = <&kp C_AC_SEARCH>;
            key-positions = <26 27>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <32 33>;
        };

        underscore {
            bindings = <&kp MINUS>;
            key-positions = <46 47>;
        };

        capslock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <39 40>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <31 32>;
        };
    };

    behaviors {
        key_or_layer: key_or_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "KEY_OR_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <125>;
            hold-trigger-key-positions = <34 35 37 38 47 48>;
        };

        key_or_mod: key_or_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "KEY_OR_MOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <125>;
            hold-trigger-key-positions = <37 38 47 48>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // | SHIFT |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | LCTRL |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | CLCK | ALT  | ENTER|  LOWER |  | RAISE | SPACE | CTRL | ALT   | GUI  |

            bindings = <
&key_or_mod LS(LA(LG(LCTRL))) ESC  &kp N1               &kp N2                  &kp N3    &kp N4    &kp N5                              &kp N6   &kp N7            &kp N8     &kp N9      &kp N0                     &kp RS(RA(RCTRL))
&kp TAB                            &kp Q                &kp W                   &kp E     &kp R     &kp T                               &kp Y    &kp U             &kp I      &kp O       &kp P                      &kp NON_US_BACKSLASH
&kp RS(BACKSPACE)                  &kp A                &kp S                   &kp D     &kp F     &kp G                               &kp H    &kp J             &kp K      &kp L       &key_or_layer 2 SEMICOLON  &key_or_layer 1 SQT
&kp LEFT_SHIFT                     &key_or_mod LCTRL Z  &key_or_mod LEFT_ALT X  &kp C     &kp V     &kp B      &kp C_MUTE    &kp C_PP   &kp N    &kp M             &kp COMMA  &kp DOT     &kp FSLH                   &kp RIGHT_SHIFT
                                                        &kp LGUI                &kp CLCK  &kp LALT  &kp SPACE  &mo LOWER     &mo RAISE  &kp RET  &kp LEFT_BRACKET  &kp RBKT   &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_DN PG_UP>;
        };

        lower_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp GRAVE  &kp F1           &kp F2       &kp F3                &kp F4                 &kp F5                       &kp F6     &kp F7        &kp F8        &kp F9        &kp F10   &kp F11
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE                     &kp N6     &kp N7        &kp N8        &kp N9        &kp N0    &kp F12
&trans     &kp HASH         &kp DOLLAR   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE                    &kp CARET  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp RPAR  &kp PIPE
&trans     &kp PERCENT      &kp LCTRL    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE  &trans    &trans  &kp LBKT   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BSLH  &trans
                            &trans       &trans                &trans                 &trans     &trans    &trans  &trans     &trans        &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_DN PG_UP>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   |       |      |                |PG_UP | HOME |  ↑    | END  |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS |                |PG_DN |  <   |   ↓   |  ->  |       |  DEL  |
            // |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      | Prev | Play  | Next |       |       |
            //              |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans     &trans      &trans    &trans      &trans  &trans
&trans      &kp INS       &kp PSCRN     &kp K_CMENU   &trans        &trans                          &kp PG_UP  &kp HOME    &kp UP    &kp END     &kp N0  &trans
&trans      &kp LALT      &kp LCTRL     &kp LSHFT     &trans        &kp CLCK                        &kp PG_DN  &kp LEFT    &kp DOWN  &kp RIGHT   &trans  &kp DEL
&trans      &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE   &trans        &trans    &trans  &trans     &kp C_PREV  &kp C_PP  &kp C_NEXT  &trans  &trans
                          &trans        &trans        &kp LEFT_ALT  &kp LCMD      &trans    &trans  &trans     &trans      &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_DN PG_UP>;
        };

        // ------------------------------------------------------------------------------------------------------------
        // |BTCLR | BT1   | BT2   |  BT3  |  BT4  |  BT5  |                |      |      |       |      |       |       |
        // |EXTPWR|RGB_HUD|RGB_HUI|RGB_SAD|RGB_SAI|RGB_EFF|                |      |      |       |      |       |       |
        // |      |RGB_BRD|RGB_BRI|       |       |       |                |      |      |       |      |       |       |
        // |      |       |       |       |       |       |RGB_TOG| |      |      |      |       |      |       |       |
        //                |       |       |       |       |       | |      |      |      |       |      |

        Adjust_layer {
            bindings = <
&bt BT_CLR                       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &none  &none  &none  &none  &none  &none
&ext_power EXT_POWER_TOGGLE_CMD  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &none  &none  &none  &none  &none  &none
&none                            &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                                      &none  &none  &none  &none  &none  &none
&none                            &none            &none            &none            &none            &none            &rgb_ug RGB_TOG    &none  &none  &none  &none  &none  &none  &none
                                                  &none            &none            &none            &none            &none              &none  &none  &none  &none  &none
            >;
        };
    };
};
